--- a/miniz.c
+++ b/miniz.c
@@ -535,6 +535,7 @@
 typedef struct mz_zip_archive_tag
 {
   mz_uint64 m_archive_size;
+  mz_uint64 m_archive_file_ofs;
   mz_uint64 m_central_directory_file_ofs;
   mz_uint m_total_files;
   mz_zip_mode m_zip_mode;
@@ -3210,11 +3211,15 @@
   if ((cdir_size = MZ_READ_LE32(pBuf + MZ_ZIP_ECDH_CDIR_SIZE_OFS)) < pZip->m_total_files * MZ_ZIP_CENTRAL_DIR_HEADER_SIZE)
     return MZ_FALSE;
 
-  cdir_ofs = MZ_READ_LE32(pBuf + MZ_ZIP_ECDH_CDIR_OFS_OFS);
+  cdir_ofs = cur_file_ofs - cdir_size;
   if ((cdir_ofs + (mz_uint64)cdir_size) > pZip->m_archive_size)
     return MZ_FALSE;
 
   pZip->m_central_directory_file_ofs = cdir_ofs;
+
+  pZip->m_archive_file_ofs = cdir_ofs - MZ_READ_LE32(pBuf + MZ_ZIP_ECDH_CDIR_OFS_OFS);
+  if (pZip->m_archive_file_ofs > pZip->m_archive_size)
+    return MZ_FALSE;
 
   if (pZip->m_total_files)
   {
@@ -3573,7 +3578,7 @@
     return MZ_FALSE;
 
   // Read and parse the local directory entry.
-  cur_file_ofs = file_stat.m_local_header_ofs;
+  cur_file_ofs = pZip->m_archive_file_ofs + file_stat.m_local_header_ofs;
   if (pZip->m_pRead(pZip->m_pIO_opaque, cur_file_ofs, pLocal_header, MZ_ZIP_LOCAL_DIR_HEADER_SIZE) != MZ_ZIP_LOCAL_DIR_HEADER_SIZE)
     return MZ_FALSE;
   if (MZ_READ_LE32(pLocal_header) != MZ_ZIP_LOCAL_DIR_HEADER_SIG)
@@ -4610,7 +4615,7 @@
   if ((pZip->m_total_files == 0xFFFF) || ((pZip->m_archive_size + num_alignment_padding_bytes + MZ_ZIP_LOCAL_DIR_HEADER_SIZE + MZ_ZIP_CENTRAL_DIR_HEADER_SIZE) > 0xFFFFFFFF))
     return MZ_FALSE;
 
-  cur_src_file_ofs = MZ_READ_LE32(pSrc_central_header + MZ_ZIP_CDH_LOCAL_HEADER_OFS);
+  cur_src_file_ofs = pSource_zip->m_archive_file_ofs + MZ_READ_LE32(pSrc_central_header + MZ_ZIP_CDH_LOCAL_HEADER_OFS);
   cur_dst_file_ofs = pZip->m_archive_size;
 
   if (pSource_zip->m_pRead(pSource_zip->m_pIO_opaque, cur_src_file_ofs, pLocal_header, MZ_ZIP_LOCAL_DIR_HEADER_SIZE) != MZ_ZIP_LOCAL_DIR_HEADER_SIZE)

